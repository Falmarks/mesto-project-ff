{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/card.js","webpack://mesto-project-ff/./src/scripts/modal.js","webpack://mesto-project-ff/./src/scripts/validation.js","webpack://mesto-project-ff/./src/scripts/api.js","webpack://mesto-project-ff/./src/scripts/index.js"],"sourcesContent":["// Темплейт карточки\r\nconst cardsTemplate = document.querySelector('#card-template').content;\r\n\r\n// Функция удаления карточки\r\nfunction deleteCard(evt) {\r\n    const cardElement = evt.target.closest('.card');\r\n    if (cardElement) {\r\n        cardElement.remove();\r\n    } else {\r\n        console.error('Card element not found');\r\n    }\r\n}\r\n\r\n// Функция создания карточки\r\nfunction createCard(cardInfo, userId, imageHandler, likeHandler, cardDeleteOnServer) {\r\n    const cardElement = cardsTemplate.querySelector('.card').cloneNode(true);\r\n    const cardDeleteButton = cardElement.querySelector('.card__delete-button');\r\n    const likeButton = cardElement.querySelector('.card__like-button');\r\n    const cardImage = cardElement.querySelector('.card__image');\r\n    const cardLikeCounter = cardElement.querySelector('.card__like-counter');\r\n    cardImage.src = cardInfo.link;\r\n    cardImage.alt = cardInfo.name;\r\n    cardElement.querySelector('.card__title').textContent = cardInfo.name;\r\n\r\n    if (cardInfo.likes.some((ures) => ures._id === userId)) {\r\n        likeButton.classList.add('card__like-button_is-active');\r\n    }\r\n\r\n    if (cardInfo.likes.length > 0) {\r\n        cardLikeCounter.textContent = cardInfo.likes.length;\r\n        cardLikeCounter.classList.remove('card__like-count_hidden');\r\n    } else {\r\n        cardLikeCounter.classList.add('card__like-count_hidden');\r\n    }\r\n\r\n    likeButton.addEventListener('click', () => likeHandler(cardInfo._id, likeButton));\r\n\r\n    if (userId !== cardInfo.owner._id) {\r\n        cardDeleteButton.style.display = 'none';\r\n    } else {\r\n        cardDeleteButton.addEventListener('click', (evt) => {\r\n            cardDeleteOnServer(cardInfo._id);\r\n        });\r\n    }\r\n\r\n    cardImage.addEventListener('click', () => {\r\n        imageHandler(cardInfo.link, cardInfo.name);\r\n    });\r\n\r\n    return cardElement;\r\n}\r\n\r\nexport {\r\n    createCard\r\n}","const openModal = (evt) => {\r\n    evt.classList.add('popup_is-opened');\r\n    document.addEventListener('keydown', closeModalOnEscape);\r\n};\r\n\r\nconst closeModal = (evt) => {\r\n    evt.classList.remove('popup_is-opened');\r\n    document.removeEventListener('keydown', closeModalOnEscape);\r\n};\r\n\r\nconst closeModalOnEscape = (evt) => {\r\n    if (evt.key === 'Escape') {\r\n        const currentPopup = document.querySelector('.popup_is-opened');\r\n        closeModal(currentPopup);\r\n    }\r\n}\r\n\r\nexport {\r\n    openModal,\r\n    closeModal,\r\n};","// Функция отключения кнопки отправки формы\r\nconst disableSubmitButton = (submitButton, config) => {\r\n    submitButton.disabled = true;\r\n    submitButton.classList.add(config.inactiveButtonClass);\r\n};\r\n\r\n// Активация и деактивация кнопки\r\nfunction toggleButtonState(formElement, config) {\r\n    const inputElements = formElement.querySelectorAll(config.inputSelector);\r\n    const submitButton = formElement.querySelector(config.submitButtonSelector);\r\n    const isFormValid = Array.prototype.every.call(inputElements, (inputElement) => inputElement.checkValidity());\r\n\r\n    if (isFormValid) {\r\n        submitButton.disabled = false;\r\n        submitButton.classList.remove(config.inactiveButtonClass);\r\n    } else {\r\n        disableSubmitButton(submitButton, config); \r\n    }\r\n}\r\n\r\n// Отображение сообщений об ошибке\r\nfunction showInputError(formElement, inputElement, config) {\r\n    const errorElement = formElement.querySelector(`#${inputElement.name}-input-error`);\r\n    inputElement.classList.add(config.inputErrorClass);\r\n\r\n    if (inputElement.validity.patternMismatch) {\r\n        errorElement.textContent = inputElement.dataset.errorMessage;\r\n    } else {\r\n        errorElement.textContent = inputElement.validationMessage;\r\n    }\r\n    errorElement.classList.add(config.errorClass);\r\n}\r\n\r\n// Скрытие сообщений об ощибке\r\nfunction hideInputError(formElement, inputElement, config) {\r\n    const errorElement = formElement.querySelector(`#${inputElement.name}-input-error`);\r\n    inputElement.classList.remove(config.inputErrorClass);\r\n    errorElement.classList.remove(config.errorClass);\r\n    errorElement.textContent = '';\r\n}\r\n\r\n// Включение валидации\r\nfunction enableValidation(config) {\r\n    const formList = document.querySelectorAll(config.formSelector);\r\n    formList.forEach((formElement) => {\r\n        const inputElements = formElement.querySelectorAll(config.inputSelector);\r\n        inputElements.forEach((inputElement) => {\r\n            inputElement.addEventListener('input', () => {\r\n                if (!inputElement.checkValidity()) {\r\n                    showInputError(formElement, inputElement, config);\r\n                } else {\r\n                    hideInputError(formElement, inputElement, config);\r\n                }\r\n                toggleButtonState(formElement, config);\r\n            });\r\n        })\r\n    });\r\n}\r\n\r\n// Очистка ошибок валидации\r\nfunction clearValidation(formElement, config) {\r\n    const inputElements = formElement.querySelectorAll(config.inputSelector);\r\n    inputElements.forEach((inputElement) => {\r\n        hideInputError(formElement, inputElement, config);\r\n        const submitButton = formElement.querySelector(config.submitButtonSelector);\r\n        disableSubmitButton(submitButton, config);\r\n    });\r\n}\r\n\r\nexport {\r\n    enableValidation,\r\n    clearValidation,\r\n    toggleButtonState\r\n};","const config = {\r\n    baseUrl: 'https://nomoreparties.co/v1/wff-cohort-32',\r\n    headers: {\r\n        authorization: 'e3aec4e9-3494-45f2-a699-d5ae070bb7af',\r\n        'Content-Type': 'application/json',\r\n    },\r\n};\r\n\r\n// Обработка ответа от сервиса\r\nfunction checkResponse(res) {\r\n    if (res.ok) {\r\n        return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n}\r\n\r\n// Изменение аватара\r\nfunction updateUserAvatar(avatar) {\r\n    return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: config.headers,\r\n            body: JSON.stringify({\r\n                avatar: avatar,\r\n            }),\r\n        })\r\n        .then(checkResponse);\r\n}\r\n\r\n// Отправление данных профиля\r\nfunction patchUserInfo(name, about) {\r\n    return fetch(`${config.baseUrl}/users/me`, {\r\n            method: 'PATCH',\r\n            headers: config.headers,\r\n            body: JSON.stringify({\r\n                name,\r\n                about\r\n            }),\r\n        })\r\n        .then(checkResponse);\r\n}\r\n\r\n// Отправление данных карточки\r\nfunction postNewCard(name, link) {\r\n    return fetch(`${config.baseUrl}/cards`, {\r\n            method: 'POST',\r\n            headers: config.headers,\r\n            body: JSON.stringify({\r\n                name,\r\n                link\r\n            }),\r\n        })\r\n        .then(checkResponse);\r\n}\r\n\r\n// Удаление своей карточки\r\nfunction deleteCardUser(cardId) {\r\n    return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n            method: 'DELETE',\r\n            headers: config.headers,\r\n        })\r\n        .then(checkResponse);\r\n}\r\n\r\n// Получение данных профиля\r\nfunction getUserInfo() {\r\n    return fetch(`${config.baseUrl}/users/me`, {\r\n            method: 'GET',\r\n            headers: config.headers,\r\n        })\r\n        .then(checkResponse);\r\n}\r\n\r\n// Данные карточек\r\nfunction getCards() {\r\n    return fetch(`${config.baseUrl}/cards`, {\r\n            method: 'GET',\r\n            headers: config.headers\r\n        })\r\n        .then(checkResponse);\r\n}\r\n\r\n// Проверка лайка\r\nfunction checkLike(cardId, isLiked) {\r\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n        method: isLiked ? \"PUT\" : \"DELETE\",\r\n        headers: config.headers,\r\n    }).then(checkResponse);\r\n}\r\n\r\nexport {\r\n    getCards,\r\n    getUserInfo,\r\n    deleteCardUser,\r\n    postNewCard,\r\n    patchUserInfo,\r\n    updateUserAvatar,\r\n    checkLike\r\n};","// Импорты\r\nimport '../pages/index.css';\r\nimport {\r\n    createCard\r\n} from './card';\r\nimport {\r\n    openModal,\r\n    closeModal\r\n} from './modal';\r\nimport {\r\n    enableValidation,\r\n    clearValidation,\r\n    toggleButtonState\r\n} from './validation';\r\nimport {\r\n    getCards,\r\n    updateUserAvatar,\r\n    getUserInfo,\r\n    deleteCardUser,\r\n    postNewCard,\r\n    patchUserInfo,\r\n    checkLike\r\n} from './api';\r\n\r\n// DOM узлы\r\nconst cardsContainer = document.querySelector('.places__list');\r\nconst profileAvatar = document.querySelector('.profile__image');\r\nconst profileAvatarPopup = document.querySelector('.popup_type_avatar')\r\nconst inputAvatar = document.querySelector('.popup__input_type_avatar');\r\nconst profileEditButton = document.querySelector('.profile__edit-button');\r\nconst profileTitle = document.querySelector('.profile__title');\r\nconst profileDescription = document.querySelector('.profile__description');\r\nconst newCardAddButton = document.querySelector('.profile__add-button');\r\nconst popupEditProfile = document.querySelector('.popup_type_edit');\r\nconst popupNewCard = document.querySelector('.popup_type_new-card');\r\nconst popupCaption = document.querySelector('.popup__caption');\r\nconst popupImage = document.querySelector('.popup__image');\r\nconst popupImageType = document.querySelector('.popup_type_image');\r\nconst popupFormProfile = document.forms['edit-profile'];\r\nconst popupNewCardForm = document.forms['new-place'];\r\nconst formAvatar = document.forms['edit-avatar'];\r\nconst config = {\r\n    formSelector: '.popup__form',\r\n    inputSelector: '.popup__input',\r\n    submitButtonSelector: '.popup__button',\r\n    inactiveButtonClass: 'popup__button_disabled',\r\n    inputErrorClass: 'popup__input_type_error',\r\n    errorClass: 'popup__error_visible'\r\n};\r\nlet userId;\r\n\r\n// Функция ожидания\r\nfunction renderLoading(isLoading, button, buttonText = 'Сохранить', loadingText = 'Сохранение...') {\r\n    if (isLoading) {\r\n        button.textContent = loadingText;\r\n    } else {\r\n        button.textContent = buttonText;\r\n    }\r\n}\r\n\r\n// Активация валидирования\r\nenableValidation(config);\r\n\r\n// Слушатель + Функция открытия попапа редактирования профиля\r\nprofileEditButton.addEventListener('click', () => {\r\n    clearValidation(popupFormProfile, config)\r\n    popupFormProfile.name.value = profileTitle.textContent;\r\n    popupFormProfile.description.value = profileDescription.textContent;\r\n    openModal(popupEditProfile);\r\n});\r\n\r\n// Слушатель открытия формы изменения аватара\r\nprofileAvatar.addEventListener('click', () => {\r\n    clearValidation(profileAvatarPopup, config)\r\n    openModal(profileAvatarPopup);\r\n});\r\n\r\n// Функция редактирования аватара\r\nfunction handleAvatarFormSubmit(evt, inputAvatar, popupAvatar, profileAvatar) {\r\n    evt.preventDefault();\r\n    const submitButton = evt.submitter;\r\n    renderLoading(true, submitButton);\r\n    updateUserAvatar(inputAvatar.value)\r\n        .then((userData) => {\r\n            profileAvatar.style.backgroundImage = `url(${userData.avatar})`;\r\n            closeModal(popupAvatar);\r\n        })\r\n        .catch((err) => {\r\n            console.error(`Ошибка: ${err}`);\r\n        })\r\n        .finally(() => {\r\n            renderLoading(false, submitButton);\r\n        });\r\n}\r\n// Слушатель кнопки редактирования аватара\r\nformAvatar.addEventListener('submit', (evt) => {\r\n    handleAvatarFormSubmit(evt, inputAvatar, profileAvatarPopup, profileAvatar);\r\n});\r\n\r\n// Функция идентификации пользователя\r\nfunction setUserInfo(user) {\r\n    profileTitle.textContent = user.name;\r\n    profileDescription.textContent = user.about;\r\n    profileAvatar.setAttribute('style', `background-image: url('${user.avatar}'`);\r\n    userId = user._id;\r\n};\r\n\r\n// Слушатель отправки формы попапа редактирования профиля + изменение информации на странице\r\npopupFormProfile.addEventListener('submit', (evt) => {\r\n    evt.preventDefault();\r\n    const submitButton = evt.submitter;\r\n    renderLoading(true, submitButton);\r\n    profileTitle.textContent = popupFormProfile.elements.name.value;\r\n    profileDescription.textContent = popupFormProfile.elements.description.value;\r\n    patchUserInfo(profileTitle.textContent, profileDescription.textContent);\r\n    closeModal(popupEditProfile);\r\n});\r\n\r\n// Слушатель закрытия модальных окон (крестик + оверлей)\r\nconst modals = document.querySelectorAll('.popup');\r\nmodals.forEach((modal) => {\r\n    modal.addEventListener('click', (evt) => {\r\n        if (evt.target.classList.contains('popup__close') || evt.target === evt.currentTarget) {\r\n            closeModal(modal);\r\n        }\r\n    })\r\n});\r\n\r\n// Слушатель + функция открытия попапа новой карточки\r\nnewCardAddButton.addEventListener('click', () => {\r\n    openModal(popupNewCard);\r\n    clearValidation(popupFormProfile, config)\r\n});\r\n\r\n// Слушатель отрисовки новой карточки\r\npopupNewCardForm.addEventListener('submit', handleAddCardFormSubmit);\r\n\r\n\r\n//Функция отрисовки новой карточки\r\nfunction handleAddCardFormSubmit(evt) {\r\n    evt.preventDefault();\r\n    const name = popupNewCardForm.elements['place-name'].value;\r\n    const link = popupNewCardForm.elements.link.value;\r\n    postNewCard(name, link)\r\n        .then((cardInfo) => {\r\n            const cardElement = createCard(cardInfo, userId, imageOpenPopup, likeHandler, deleteCardUser);\r\n            cardsContainer.prepend(cardElement);\r\n            popupNewCardForm.reset();\r\n            toggleButtonState(popupNewCardForm, config);\r\n            closeModal(popupNewCard);\r\n        })\r\n        .catch((err) => {\r\n            console.error(`Ошибка: ${err}`);\r\n        })\r\n}\r\n\r\n// Функция открытия картинок карточек\r\nconst imageOpenPopup = (link, name) => {\r\n    popupImage.src = link;\r\n    popupImage.alt = name;\r\n    popupCaption.textContent = name;\r\n    openModal(popupImageType);\r\n};\r\n\r\n// Функция отрисовки карточкек на страницу\r\nfunction renderCards(cardDataList, userId) {\r\n    cardDataList.forEach((element) => {\r\n        const cardElement = createCard(element, userId, imageOpenPopup, likeHandler, deleteCardUser);\r\n        cardsContainer.append(cardElement);\r\n    });\r\n};\r\n\r\nPromise.all([getUserInfo(), getCards()])\r\n    .then(([user, cards]) => {\r\n        setUserInfo(user);\r\n        renderCards(cards, user._id)\r\n    })\r\n    .catch((err) => {\r\n        console.log('Ошибка', err);\r\n    });\r\n\r\n//Функция лайка\r\nfunction likeHandler(cardId, likeButton) {\r\n    const isLiked = !likeButton.classList.contains('card__like-button_is-active');\r\n    checkLike(cardId, isLiked)\r\n        .then((data) => {\r\n            likeButton.classList.toggle('card__like-button_is-active');\r\n            const cardLikeCount = likeButton\r\n                .closest('.card')\r\n                .querySelector('.card__like-counter');\r\n\r\n            if (data.likes.length > 0) {\r\n                cardLikeCount.textContent = data.likes.length;\r\n                cardLikeCount.classList.remove('card__like-count_hidden');\r\n            } else {\r\n                cardLikeCount.classList.add('card__like-count_hidden');\r\n            }\r\n        })\r\n        .catch((err) => console.error(`Ошибка: ${err}`));\r\n};"],"names":["cardsTemplate","document","querySelector","content","createCard","cardInfo","userId","imageHandler","likeHandler","cardDeleteOnServer","cardElement","cloneNode","cardDeleteButton","likeButton","cardImage","cardLikeCounter","src","link","alt","name","textContent","likes","some","ures","_id","classList","add","length","remove","addEventListener","owner","style","display","evt","openModal","closeModalOnEscape","closeModal","removeEventListener","key","currentPopup","disableSubmitButton","submitButton","config","disabled","inactiveButtonClass","toggleButtonState","formElement","inputElements","querySelectorAll","inputSelector","submitButtonSelector","Array","prototype","every","call","inputElement","checkValidity","hideInputError","errorElement","concat","inputErrorClass","errorClass","clearValidation","forEach","baseUrl","headers","authorization","checkResponse","res","ok","json","Promise","reject","status","deleteCardUser","cardId","fetch","method","then","cardsContainer","profileAvatar","profileAvatarPopup","inputAvatar","profileEditButton","profileTitle","profileDescription","newCardAddButton","popupEditProfile","popupNewCard","popupCaption","popupImage","popupImageType","popupFormProfile","forms","popupNewCardForm","formAvatar","formSelector","renderLoading","isLoading","button","buttonText","arguments","undefined","loadingText","validity","patternMismatch","dataset","errorMessage","validationMessage","showInputError","enableValidation","value","description","popupAvatar","preventDefault","avatar","submitter","body","JSON","stringify","userData","backgroundImage","catch","err","console","error","finally","handleAvatarFormSubmit","about","elements","modal","target","contains","currentTarget","postNewCard","imageOpenPopup","prepend","reset","isLiked","checkLike","data","toggle","cardLikeCount","closest","all","_ref","_ref2","user","cards","setAttribute","setUserInfo","cardDataList","element","append","renderCards","log"],"sourceRoot":""}